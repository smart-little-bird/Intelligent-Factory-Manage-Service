// <auto-generated />
using System;
using Intelligent.Factory.Management.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Intelligent.Factory.Management.API.Migrations
{
    [DbContext(typeof(IntelligentFactoryManagementContext))]
    [Migration("20240328135247_init_context")]
    partial class init_context
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ClientAggregate.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BillingTelephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientAgentId")
                        .HasColumnType("int");

                    b.Property<int>("ClientType")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TFN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientAgentId");

                    b.ToTable("client", "intelligent_factory_management");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ClientAggregate.ClientAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clientAgent", "intelligent_factory_management");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContractNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractStatus")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("contract", "intelligent_factory_management");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.ContractContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("contractContext", "intelligent_factory_management");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ProductAggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryCriteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("product", "intelligent_factory_management");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ProductAggregate.ProductItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specifications")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TechnicalRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("productItem", "intelligent_factory_management");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ClientAggregate.Client", b =>
                {
                    b.HasOne("Intelligent.Factory.Management.Domain.AggregatesModel.ClientAggregate.ClientAgent", "ClientAgent")
                        .WithMany()
                        .HasForeignKey("ClientAgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Intelligent.Factory.Management.Domain.AggregatesModel.ClientAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<int>("ClientId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("City");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Province");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("ClientId");

                            b1.ToTable("client", "intelligent_factory_management");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.OwnsOne("Intelligent.Factory.Management.Domain.AggregatesModel.ClientAggregate.Bank", "Bank", b1 =>
                        {
                            b1.Property<int>("ClientId")
                                .HasColumnType("int");

                            b1.Property<string>("BankAccount")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BankAccount");

                            b1.Property<string>("BankTitle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BankTitle");

                            b1.HasKey("ClientId");

                            b1.ToTable("client", "intelligent_factory_management");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Bank")
                        .IsRequired();

                    b.Navigation("ClientAgent");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.Contract", b =>
                {
                    b.OwnsOne("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.FaxInfo", "FaxInfo", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<bool>("IsCombineFax")
                                .HasColumnType("bit")
                                .HasColumnName("IsCombineFax");

                            b1.Property<int>("TaxRate")
                                .HasColumnType("int")
                                .HasColumnName("TaxRate");

                            b1.HasKey("ContractId");

                            b1.ToTable("contract", "intelligent_factory_management");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.LogisticsInfo", "LogisticsInfo", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<string>("LogisticsUndertaker")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LogisticsUndertaker");

                            b1.Property<DateTime>("ShipDateTime")
                                .HasColumnType("datetime2")
                                .HasColumnName("ShipDateTime");

                            b1.Property<string>("ShipType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ShipType");

                            b1.HasKey("ContractId");

                            b1.ToTable("contract", "intelligent_factory_management");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.PaymentMethod", "PaymentMethod", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<string>("PayPercentJson")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PayPercent");

                            b1.Property<int>("PaymentType")
                                .HasColumnType("int")
                                .HasColumnName("PaymentType");

                            b1.HasKey("ContractId");

                            b1.ToTable("contract", "intelligent_factory_management");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.Navigation("FaxInfo")
                        .IsRequired();

                    b.Navigation("LogisticsInfo")
                        .IsRequired();

                    b.Navigation("PaymentMethod")
                        .IsRequired();
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.ContractContext", b =>
                {
                    b.HasOne("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.Contract", null)
                        .WithMany("ContractContexts")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.ContractContextProperty", "ContractContextProperty", b1 =>
                        {
                            b1.Property<int>("ContractContextId")
                                .HasColumnType("int");

                            b1.Property<bool>("IsIndependent")
                                .HasColumnType("bit")
                                .HasColumnName("IsIndependent");

                            b1.Property<int>("ProductId")
                                .HasColumnType("int")
                                .HasColumnName("ProductId");

                            b1.HasKey("ContractContextId");

                            b1.ToTable("contractContext", "intelligent_factory_management");

                            b1.WithOwner()
                                .HasForeignKey("ContractContextId");
                        });

                    b.Navigation("ContractContextProperty")
                        .IsRequired();
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ProductAggregate.ProductItem", b =>
                {
                    b.HasOne("Intelligent.Factory.Management.Domain.AggregatesModel.ProductAggregate.Product", null)
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ContractAggregate.Contract", b =>
                {
                    b.Navigation("ContractContexts");
                });

            modelBuilder.Entity("Intelligent.Factory.Management.Domain.AggregatesModel.ProductAggregate.Product", b =>
                {
                    b.Navigation("ProductItems");
                });
#pragma warning restore 612, 618
        }
    }
}
